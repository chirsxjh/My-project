#!/usr/bin/env python
# coding:utf-8
def shell_sort(li ):
    n = len(li) #li列表中有n个数 下标从0到n-1
    gep = n//2 #设置初始步长进行分组
    #当步长大于等于1的时候 一直进行分组的插入排序
    while gep >= 1 :
        # 从gep的元素往后 一个一个元素对前面所有组跟自己处于相同位置的数进行插入排序
        for j in range( gep , n ):
            i = j   #标记下当前j的位置给i
            # 这层循环是为了回跳i所在位置，
            # 当一个新元素对前组同位置元素交换后，当前元素还需要跟再往前组的同位置元素比较决定是不是要交换
            # i - gep 能看我当前是不是第一组位置，如果是第一组位置，我前面没有组了，就不循环了，
            # 如果我是第三组，我会跳到前二组再跟第一组的相同位置元素进行比较
            while i - gep >= 0 :
                #如果当前数比前一组同位置数小，就交换数值
                if li[i] < li[i-gep] :
                    li[i] , li[i-gep] = li[i-gep] , li[i]
                    #如果我和前一组同位置元素交换了，我需要继续与再往前一组同位置元素比较是否需要交换
                    #这个操作是把我当前位置回跳到上一组的同位置
                    i -= gep
                #如果没有发生数据交换，说明前面的不用再比较了，前面的一定都比我当前数小，跳出回跳位置的循环
                else :
                    break
        #修改步长 缩小步长
        gep//=2

if __name__ == '__main__':
    li = [5,4,3,2,1]
    shell_sort(li)
    print(li)